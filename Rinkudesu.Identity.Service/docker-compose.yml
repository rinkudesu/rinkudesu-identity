services:
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./identity-postgres:/var/lib/postgresql/data
  rinkudesu-identity:
    image: ghcr.io/rinkudesu/rinkudesu-identity:latest
    restart: unless-stopped
    build:
      context: ..
      dockerfile: Rinkudesu.Identity.Service/Dockerfile
    depends_on:
      - postgres
    ports:
      - "127.0.0.1:80:80"
    environment:
      RINKU_IDENTITY_CONNECTIONSTRING: "Server=postgres;Port=5432;Database=rinku-identity;User Id=postgres;Password=postgres;"
      RINKU_IDENTITY_BASEURL: http://rinkudesu-identity/
      RINKU_IDENTITY_REDIS: redis:6379
      RINKU_ARGON_SECRET: "replace with secure random string"
      RINKU_KAFKA_ADDRESS: "selenium-kafka:9092"
      RINKU_KAFKA_CLIENT_ID: "rinkudesu-identity"
      RINKU_KAFKA_CONSUMER_GROUP_ID: "rinkudesu-identity"
      RINKU_INITIAL_USER_EMAIL: "test@example.com"
      RINKU_INITIAL_USER_PASSWORD: "qwertyuiop[]"
      RINKU_RSA_PASSWORD: "test"
      RINKU_EMAIL_FROM: test@example.com
      RINKU_EMAIL_HOST: localhost
      RINKU_EMAIL_PASSWORD: test
      RINKU_EMAIL_PORT: 2525
      RINKU_EMAIL_USERNAME: test
    volumes:
      - ./JWK:/app/JWK:ro
    command:
      - "--applyMigrations"
  redis:
    image: redis
    restart: unless-stopped
